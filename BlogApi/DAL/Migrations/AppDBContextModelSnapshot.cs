// <auto-generated />
using System;
using DAL;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

#nullable disable

namespace DAL.Migrations
{
    [DbContext(typeof(AppDBContext))]
    partial class AppDBContextModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "6.0.35")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder, 1L, 1);

            modelBuilder.Entity("BlogEntryUser", b =>
                {
                    b.Property<int>("BlogEntriesBetId")
                        .HasColumnType("int");

                    b.Property<int>("UsersUsrId")
                        .HasColumnType("int");

                    b.HasKey("BlogEntriesBetId", "UsersUsrId");

                    b.HasIndex("UsersUsrId");

                    b.ToTable("BlogEntryUser");
                });

            modelBuilder.Entity("Model.BlogEntry", b =>
                {
                    b.Property<int>("BetId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("bet_id");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("BetId"), 1L, 1);

                    b.Property<DateTime?>("BetAddDate")
                        .HasColumnType("datetime2")
                        .HasColumnName("bet_add_date");

                    b.Property<string>("BetAutor")
                        .HasColumnType("nvarchar(max)")
                        .HasColumnName("bet_autor");

                    b.Property<int>("BetCatId")
                        .HasColumnType("int")
                        .HasColumnName("bet_cat_id");

                    b.Property<string>("BetContent")
                        .HasColumnType("nvarchar(max)")
                        .HasColumnName("bet_content");

                    b.Property<bool?>("BetDeleted")
                        .HasColumnType("bit")
                        .HasColumnName("bet_deleted");

                    b.Property<DateTime?>("BetPublicationDate")
                        .HasColumnType("datetime2")
                        .HasColumnName("bet_publications_date");

                    b.Property<string>("BetTitle")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)")
                        .HasColumnName("bet_title");

                    b.HasKey("BetId");

                    b.HasIndex("BetCatId");

                    b.ToTable("blog_entry");
                });

            modelBuilder.Entity("Model.Category", b =>
                {
                    b.Property<int>("CatId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("cat_id");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("CatId"), 1L, 1);

                    b.Property<DateTime?>("CatAddDate")
                        .HasColumnType("datetime2")
                        .HasColumnName("cat_add_date");

                    b.Property<bool?>("CatDeleted")
                        .HasColumnType("bit")
                        .HasColumnName("cat_deleted");

                    b.Property<string>("CatDescription")
                        .HasMaxLength(1000)
                        .HasColumnType("nvarchar(1000)")
                        .HasColumnName("cat_description");

                    b.Property<string>("CatName")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)")
                        .HasColumnName("cat_name");

                    b.HasKey("CatId");

                    b.ToTable("category");
                });

            modelBuilder.Entity("Model.User", b =>
                {
                    b.Property<int>("UsrId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("UsrId"), 1L, 1);

                    b.Property<DateTime?>("UsrAddDate")
                        .HasColumnType("datetime2")
                        .HasColumnName("usr_add_date");

                    b.Property<bool?>("UsrDeleted")
                        .HasColumnType("bit")
                        .HasColumnName("usr_deleted");

                    b.Property<string>("UsrEmail")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)")
                        .HasColumnName("usr_email");

                    b.Property<string>("UsrFirstName")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)")
                        .HasColumnName("usr_first_name");

                    b.Property<string>("UsrLastName")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)")
                        .HasColumnName("usr_last_name");

                    b.Property<string>("UsrPassword")
                        .IsRequired()
                        .HasMaxLength(250)
                        .HasColumnType("nvarchar(250)")
                        .HasColumnName("usr_password");

                    b.HasKey("UsrId");

                    b.ToTable("user");
                });

            modelBuilder.Entity("BlogEntryUser", b =>
                {
                    b.HasOne("Model.BlogEntry", null)
                        .WithMany()
                        .HasForeignKey("BlogEntriesBetId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("Model.User", null)
                        .WithMany()
                        .HasForeignKey("UsersUsrId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("Model.BlogEntry", b =>
                {
                    b.HasOne("Model.Category", "BetCat")
                        .WithMany("BlogEntries")
                        .HasForeignKey("BetCatId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("BetCat");
                });

            modelBuilder.Entity("Model.Category", b =>
                {
                    b.Navigation("BlogEntries");
                });
#pragma warning restore 612, 618
        }
    }
}
